@page "/AgregarCategoria"
@attribute [Authorize]
@using sistemaReservas.Shared
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@using BlazorColorPicker

<PageTitle>Agregar Categoría</PageTitle>
<h1>Agregar Categoría</h1>

<EditForm Model="@agregarTipoParameters" OnValidSubmit="@OnSubmit">
	<DataAnnotationsValidator />	
	<HxInputText LabelType="LabelType.Floating" Label="Nombre" @bind-Value="agregarTipoParameters.Nombre" CssClass="my-3"/>
	<HxInputNumber LabelType="LabelType.Floating" Label="Precio" Decimals="0" TValue="decimal" @bind-Value="agregarTipoParameters.Precio" CssClass="my-3" />

	<button class="hx-button btn btn-outline-primary mb-1" @onclick="OpenModal">
		Seleccionar Color &nbsp; <div style="background-color:@color" class="buttonColor"></div> 
	</button>
	<ColorPicker Title="Seleccionar un color" IsOpened="isOpened" Closed="ClosedEvent" MyColor="@color"></ColorPicker>

	<br />
	<HxSubmit Color="ThemeColor.Primary" Icon="BootstrapIcon.CalendarPlus">Agregar Categoría</HxSubmit>

	@if (exito == true)
		{			
			<hr>
		<HxAlert Color="ThemeColor.Success" Dismissible="true"><HxIcon Icon="@BootstrapIcon.CheckCircleFill" /> ¡La categoría se agregó correctamente!</HxAlert>
		agregarTipoParameters.Nombre = null;
		agregarTipoParameters.Precio = 0;
		color = "#FFFFFF";
		request = null;
			
		}

	@if (exito == false)
	{
		<hr>
		<HxAlert Color="ThemeColor.Danger"><HxIcon Icon="@BootstrapIcon.ExclamationTriangleFill" />
			<h4 class="alert-heading"> Ocurrió un error</h4>
			<p>Por favor, revise los datos ingresados e intente nuevamente</p>
			<hr>
			<p class="mb-0">Si el error persiste, no dude en contactar al Soporte Técnico.</p>
			
			if(error != null) 
			{
				<hr>
				<p class="mb-0">@error</p>
			} 
		</HxAlert>		
	}
</EditForm>

@code {
	public AgregarTipoParameters agregarTipoParameters = new AgregarTipoParameters();
	string? error { get; set; } = null;
	private HttpResponseMessage? request;
	private bool? exito = null;

	bool isOpened = false;
	string color = "#FFFFFF";

	void OpenModal()
	{
		isOpened = true;
	}

	void ClosedEvent(string value)
	{
		color = value;
		agregarTipoParameters.Color = color;
		isOpened = false;
    }


	private async Task OnSubmit()
	{
		error = null;
		exito = null;
		try		
		{						
			request = await Http.PostAsJsonAsync("Api/TipoMesas", agregarTipoParameters);
			if (request.IsSuccessStatusCode)
			{ 
				exito = true;
			}
			else
			{
				exito = false;
			}

		}
		catch (Exception ex)
		{
			exito = false;
			error = ex.Message;
        }
		

    }


}
