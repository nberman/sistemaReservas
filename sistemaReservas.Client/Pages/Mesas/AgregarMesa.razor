@page "/AgregarMesa"
@attribute [Authorize]
@using sistemaReservas.Shared
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Threading.Tasks
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http


<PageTitle>Agregar Mesa</PageTitle>
<h1>Agregar Mesa</h1>

<EditForm Model="@agregarMesaParameters" OnValidSubmit="@OnSubmit">
	<DataAnnotationsValidator />
	
	@if (eventos != null)
	{		
		<HxSelect Label="Evento" TItem="ListarEventosParameters" TValue="int?" Data="@eventos" @bind-Value="@agregarMesaParameters.Evento" TextSelector="@(p => p.Nombre)" ValueSelector="@(p => p.IdEvento)" Nullable="false" NullText="-- Seleccionar Evento --" NullDataText="Cargando eventos..." />

		<HxInputNumber Label="Número de mesa" TValue="int" @bind-Value="agregarMesaParameters.NumeroMesa" />
		<HxInputNumber Label="Cantidad de sillas" TValue="int" @bind-Value="agregarMesaParameters.CantidadSillas" />

		@if (categorias != null)
		{
			<HxSelect Label="Categoría" TItem="ListarTipoParameters" TValue="int?" Data="@categorias" @bind-Value="@agregarMesaParameters.Categoria" TextSelector="@(p => p.Nombre)" ValueSelector="@(p => p.IdTipoMesa)" Nullable="false" NullText="-- Seleccionar Categoría --" NullDataText="Cargando categorías..." />
		}

	}

   	
	<HxSubmit Color="ThemeColor.Primary" Icon="BootstrapIcon.CalendarPlus">Agregar Mesa</HxSubmit>

	@if (exito == true)
		{			
			<hr>
			<HxAlert Color="ThemeColor.Success" Dismissible="true"><HxIcon Icon="@BootstrapIcon.CheckCircleFill" /> ¡La mesa se cargó correctamente!</HxAlert>
			agregarMesaParameters.Evento = null;
			agregarMesaParameters.NumeroMesa = 0;
			@*agregarMesaParameters.Sillas = null;*@
			agregarMesaParameters.Categoria = null;
			agregarMesaParameters.CantidadSillas = 0;
			request = null;			
		}

	@if (exito == false)
	{
		<hr>
		<HxAlert Color="ThemeColor.Danger"><HxIcon Icon="@BootstrapIcon.ExclamationTriangleFill" />
			<h4 class="alert-heading"> Ocurrió un error</h4>
			<p>Por favor, revise los datos ingresados e intente nuevamente</p>
			<hr>
			<p class="mb-0">Si el error persiste, no dude en contactar al Soporte Técnico.</p>
			
			if(error != null) 
			{
				<hr>
				<p class="mb-0">@error</p>				
			} 
		</HxAlert>		
	}
</EditForm>

@code {
	protected AgregarMesaParameters agregarMesaParameters = new AgregarMesaParameters();
	string? error { get; set; } = null;
	private HttpResponseMessage? request;
	private HttpResponseMessage? requestSilla;

	private bool? exito = null;
	protected ListarEventosParameters[]? lista = null;
	protected List<ListarEventosParameters> eventos = new List<ListarEventosParameters>();
	protected ListarTipoParameters[]? listaCat = null;
	protected List<ListarTipoParameters> categorias = new List<ListarTipoParameters>();


	protected override async Task OnInitializedAsync()
	{
		agregarMesaParameters.Evento = null;
		agregarMesaParameters.Categoria = null;		
		lista = await Http.GetFromJsonAsync<ListarEventosParameters[]>("Api/Eventos");
		if (lista != null)
		{
			eventos = lista.ToList();
		}
		listaCat = await Http.GetFromJsonAsync<ListarTipoParameters[]>("Api/TipoMesas");
		if (listaCat != null)
		{
			categorias = listaCat.ToList();
		}
	}

	private async Task OnSubmit()
	{
		error = null;
		exito = null;
		try		
		{	
			for (int i = 0; i<agregarMesaParameters.CantidadSillas; i++)
			{
				AgregarSillaParameters silla = new AgregarSillaParameters();
				silla.Estado = "Libre";
				requestSilla = await Http.PostAsJsonAsync("Api/Sillas", silla);
				if (requestSilla.IsSuccessStatusCode) {
					var data = await requestSilla.Content.ReadFromJsonAsync<JsonElement>();
					int idSilla = data.GetProperty("idSilla").GetInt32();
					Console.WriteLine(idSilla);
					agregarMesaParameters.Sillas.Add(idSilla);
				}
				else
				{
					exito = false;
				}
			}

			Console.WriteLine(agregarMesaParameters.Evento);
			Console.WriteLine(agregarMesaParameters.NumeroMesa);
			Console.WriteLine(agregarMesaParameters.CantidadSillas);
			Console.WriteLine(agregarMesaParameters.Categoria);
			if (agregarMesaParameters.Sillas != null)
			{
				Console.WriteLine("Not null");
				if (agregarMesaParameters.Sillas.Count != 0)
				{
					Console.WriteLine("Hay elementos");
					foreach (int elemento in agregarMesaParameters.Sillas)
					{
						Console.WriteLine(elemento);
					}
				}
				else
				{
					Console.WriteLine("Cero elementos");
				}
			}

			request = await Http.PostAsJsonAsync("Api/Mesas", agregarMesaParameters);
			Console.WriteLine(request.ToString());
			if (request.IsSuccessStatusCode)
			{ 
				exito = true;
			}
			else
			{
				exito = false;
			}

		}
		catch (Exception ex)
		{
			exito = false;
			error = ex.Message;
        }
		

    }


}
